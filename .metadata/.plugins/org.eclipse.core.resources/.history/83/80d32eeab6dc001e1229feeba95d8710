/*
 * WS2812B_led.c
 *
 *  Created on: Mar 5, 2024
 *      Author: BASSEL
 */


#include "WS2812B_led.h"
//static void WS2812B_spi(uint32_t color);
//
//static void WS2812B_spi(uint32_t color){
//	uint8_t data[9];
//	memset(data,0, sizeof(data));
//	data[0]=color>>24;
//	data[1]=color>>16;
//	data[2]=color>>8;
////	for(int i=9;i>0;i--){
////		HAL_SPI_Transmit(&hspi1, data, sizeof(data), 1000);
////	}
////	int index=0;
////	for(int i=23;i>=0;i--){
////		if((color>>i)& SET){
////			data[index++]=0b110;
////		}
////		else{
////			data[index++]=0b100;
////		}
////	}
//		HAL_SPI_Transmit(&hspi1, data, sizeof(data), 1000);
//
//}
//void WS2812B_send(led_struct_handle_t* led_handle){
//	uint8_t leds_number=led_handle->led_number;
//	while(leds_number>0){
//		WS2812B_spi(led_handle->color);
//		leds_number--;
//	}
//	HAL_Delay(1);
//}
#include <string.h>
#include "main.h"

uint8_t ws2812_buffer[WS2812_BUFFER_SIZE];

void ws2812_init(void) {
    memset(ws2812_buffer, 0, WS2812_BUFFER_SIZE);
    ws2812_send_spi();
}

void ws2812_send_spi(void) {
    HAL_SPI_Transmit(&WS2812_SPI_HANDLE, ws2812_buffer, WS2812_BUFFER_SIZE, HAL_MAX_DELAY);
}

#define WS2812_FILL_BUFFER(COLOR) \
    for( uint8_t mask = 0x80; mask; mask >>= 1 ) { \
        if( COLOR & mask ) { \
            *ptr++ = 0xfc; \
        } else { \
            *ptr++ = 0x80; \
        } \
    }

void ws2812_pixel(uint16_t led_no, uint8_t r, uint8_t g, uint8_t b) {
    uint8_t * ptr = &ws2812_buffer[24 * led_no];
    WS2812_FILL_BUFFER(g);
    WS2812_FILL_BUFFER(r);
    WS2812_FILL_BUFFER(b);
}

void ws2812_pixel_all(uint8_t r, uint8_t g, uint8_t b) {
    uint8_t * ptr = ws2812_buffer;
    for( uint16_t i = 0; i < WS2812_NUM_LEDS; ++i) {
        WS2812_FILL_BUFFER(g);
        WS2812_FILL_BUFFER(r);
        WS2812_FILL_BUFFER(b);
    }
}
